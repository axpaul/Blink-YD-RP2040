; PlatformIO Project Configuration File
;
; This configuration is for a Raspberry Pi Pico (RP2040)
; using the Arduino core (earlephilhower) within PlatformIO.
; It supports USB output via TinyUSB, CMSIS-DAP debugging,
; and is configured for projects using WS2812B LEDs via the Adafruit NeoPixel library.

[env:pico]

; Platform definition. This uses a maintained fork that supports the RP2040 under PlatformIO with Arduino.
platform = https://github.com/maxgerhardt/platform-raspberrypi.git

; Framework to use. The 'arduino' framework will use the earlephilhower core specified below.
framework = arduino

; Board definition. 'generic' works for custom or bare RP2040 boards.
; For official Raspberry Pi Pico, you can use 'raspberry-pi-pico' instead.
board = generic

; Specify the Arduino core to use. The earlephilhower core supports RP2040 in Arduino.
board_build.core = earlephilhower

; CMSIS-DAP protocol is used for both uploading code and debugging.
; Ensure the correct wiring (SWDIO, SWCLK, GND) and a compatible CMSIS-DAP adapter.
upload_protocol = cmsis-dap
debug_tool = cmsis-dap

; External library dependencies.
; This includes the Adafruit NeoPixel library for controlling WS2812B LEDs.
lib_deps = 
    adafruit/Adafruit NeoPixel@^1.12.5

; Flash memory configuration.
; This assumes a 16MB flash chip where 1MB is used for the sketch and 15MB for a filesystem.
board_build.filesystem_size = 15m

; CPU frequency configuration.
; The RP2040 supports up to 133 MHz officially. This enables the maximum stable clock speed.
board_build.f_cpu = 133000000L

; Build flags passed to the compiler.
; - USE_TINYUSB enables USB for stdio (e.g., printf via USB serial).
; - Other debug flags can be uncommented if needed.
build_flags =
  -DUSE_TINYUSB
;  -DDEBUG_RP2040_PORT=Serial   ; Optional: redirect debug output to Serial
